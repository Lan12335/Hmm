#include <nRF24L01.h>
#include <SPI.h>
#include <RF24.h>
#include <Wire.h>
#include <Time.h>
#include <DS1307RTC.h>
#include <SD.h>

//for SD
File myFile;

#define O 100
#define T 200 
#define Th 300 
#define F 400 
#define Fi 500 

#define SCS 10
#define SDP 4  
#define NCS 7

//for nRF24L01
RF24 radio(8,NCS);
const byte addresses[][6] = {"00001", "00002"};

//Ff123 is the force sensors and are connected to A012
int FS[3];

#define Close 4
#define Open 5 
#define sensing 6  

byte data=0;  //data packet to be received from the LGT RF nano, must be ==1

byte intru;
byte key=0;

void setup() {
  Serial.begin(9600);

  pinMode(Close, OUTPUT);
  pinMode(Open, OUTPUT);
  pinMode(sensing, OUTPUT);

  pinMode(NCS, OUTPUT);
  pinMode(SDP, OUTPUT);
  pinMode(SCS, OUTPUT);
  digitalWrite(NCS, HIGH);
  digitalWrite(SDP, HIGH);
  digitalWrite(SCS, HIGH);
  //HIGH means off both on CS and PNP MOSFET

  NRFinit();

  SDinit();  
}

void NRFinit() {
  nact();
  if(radio.begin()) {
    Serial.println("Radio G...");
    radio.setPALevel(RF24_PA_MAX);
    radio.setDataRate(RF24_250KBPS);
    radio.openWritingPipe(addresses[1]);
    radio.openReadingPipe(1, addresses[0]);
    //radio.setChannel(90);
  }

  else if(!radio.begin()) {
    Serial.println(Radio P...);
    while(1);
  }
}

void SDinit() {
  sact();
  if(SD.begin(10)) {
    Serial.println("SD G...");

    if(SD.exists("experi.csv")) {
      SD.remove("experi.csv");
      Serial.println("CSV overwritten");
    }

    myFile = SD.open("experi.csv", FILE_WRITE);

    if(myFile) {
      Serial.println("writing ");
      myFile.print("Time(second");
      myFile.print(",");
      myFile.print("Minute");
      myFile.print(",");
      myFile.print("Hour)");
      myFile.print(" Date(Day");
      myFile.print(",");
      myFile.print("Month)");
      myFile.print(",");
      myFile.print("POS: ");
      myFile.print(",");
      myFile.print("1");
      myFile.print(",");
      myFile.print("2");
      myFile.print(",");
      myFile.print("3");
      myFile.print(",");

      myFile.close();
    }
    else if(!myFile) {
      Serial.println("Writing P...");
      while(1);
    }
  }

  else if(!SD.begin(10)) {
    Serial.println("SD P...");
    while(1);
  }
}

void loop() {
  FS[0] = analogRead(A0);
  FS[1] = analogRead(A1);
  FS[2] = analogRead(A2);

  if((FS[0]>10) || (FS[1]>10) || (FS[2]>10)) {
    REALTIME();
  }

  if((F1>=O) || (F2>=O) || (F3>=O)) {  //if FS are giving values, then LED loghts up
    digitalWrite(sensing, HIGH);
    Serial.println("Sensing");
  }

  else if((F1<O) || (F2<O) || (F3<O)) {  //FS are not giving values, then LED is off
    digitalWrite(sensing, LOW);
  }
  
  REALTIME();  //includes RTC

  radio.startListening();

  if(radio.available()) {  //opening the door with wallet
    radio.read(&data,sizeof(data));  //if this does not work we can try to make it so that if(radio.available()) {data==1; }

    Serial.println("please insert key you have 10 sec");
    delay(10000);  //time to insert key

    while((F1>=O) && (F2>=O) && (F3>=O)) {  
      opening();

      if(!radio.available() && (F1<=O) && (F2<=O) && (F3<=O)) {  //if nawala ung wallet and walang key
        break;
      }
    }

    if((F1<=O) && (F2<=O) && (F3<=O)){  //sends POS[3] if FS does not give input and RA
      DS();
    }
  }

  else if(!radio.available()) {
    while((F1>=O) && (F2>=O) && (F3>=O)){  //while F123 are giving inputs meaning a key
      PIopen();

      if((F1<=O) || (F2<=O) || (F3<=O)) {  //if one FS gets<100 it breaks
        break;
      }
    }

    while((F1>=O) || (F2>=O) || (F3>=O)){  //while F123 are giving inputs independently meaning picklocks
      v12345();

      if((F1<=O) && (F2<=O) && (F3<=O)) {  //if all FS are down, it breaks
        break;
      }
    }
  }

  SDwrite();

  delay(1000);
}

void nact() {
  digitalWrite(SDP, HIGH);
  digitalWrite(SCS, HIGH);
  digitalWrite(NCS, LOW) 
}

void sact() {
  digitalWrite(NCS, HIGH);
  digitalWrite(SCS, LOW);
  digitalWrite(SDP, LOW);
}

void TIME () {
  tmElements_t tm;
  if (RTC.read(tm)) {
    Serial.print("Time: ");
    Serial.print(tm.Hour);
    Serial.print(":");
    Serial.print(tm.Minute);
    Serial.print(":");
    Serial.print(tm.Second);
    Serial.print(",Date: ");
    Serial.print(tm.Day);
    Serial.print("/");
    Serial.println(tm.Month);

    myFile = SD.open("experi.csv", FILE_WRITE);

    if(myFile) {
      myFile.print("Time: ");
      myFile.print(tm.Second);
      myFile.print(",");
      myFile.print(tm.Minute);
      myFile.print(",");
      myFile.print(tm.Hour);
      myFile.print("Day(DMY): ");
      myFile.print(tm.Day);
      myFile.print(",");
      myFile.print(tm.Month);
      myFile.print(",");
      myFile.print(FS[0]);
      myFile.print(",");
      myFile.print(FS[1]);
      myFile.print(",");
      myFile.print(FS[2]);
      myFile.print(",");

      myFile.close();
    }

    else if(!myFile) {
      Serial.println("Error write RTC");
      while(1);
    }
  }
  
  else {
    if (!RTC.chipPresent()) {
      Serial.println("REALTIME P...");
    }
  }
}

//Ln 101: If((key1) && (F1==pos1)). what i want to happen is, if key1 is true then the maps on O1 will be the passkey of the doorknob
void opening() {
  //F123 will equal to a value in keys on void.v12345
  //IF key is equal to either 12345 it opens, otherwise by default close
  switch(key) { 
    case 1:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    }
    break;

    case 2:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    }
    break;

    case 3:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    }
    break;

    case 4:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    }
    break;

    case 5:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    }
    break;

    default:
    digitalWrite(Close, HIGH);
    digitalWrite(Open, LOW);
    break;
  }
  
}

void PIopen() {
  switch (key) {
    case 1:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
      digitalWrite(Close, LOW);
      digitalWrite(Open, HIGH);
      intru = 1;
    }
    break;

    case 2:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
      digitalWrite(Close, LOW);
      digitalWrite(Open, HIGH);
      intru = 2;
    }
    break;

    case 3:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
      digitalWrite(Close, LOW);
      digitalWrite(Open, HIGH);
      intru = 3;
    }
    break;

    case 4:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
      digitalWrite(Close, LOW);
      digitalWrite(Open, HIGH);
      intru = 4;
    }
    break;

    case 5:
    if((F1>=pos1) && (F2>=pos2) && (F3>=pos3)) {
      digitalWrite(Close, LOW);
      digitalWrite(Open, HIGH);
      intru = 5;
    }
    break;

    default:
      digitalWrite(Close, HIGH);
      digitalWrite(Open, LOW);
    break;
  }
}

void v12345() {
  //any value that will make so that when F123 is x then pos123 will be x, and when pos123=x and F123=x open will be HIGH
  //10,20,30,40 are degrees in servo
  //The probability will increase as the number of if statements in this method increases, current probability is 1/5

  if((F1>=O) || (F2>=O) || (F3>=O)) {
    pos1=10; 
    pos2=20; 
    pos3=30; 

    key=1;
  }
  
  else if((F1>=T) || (F2>=T) || (F3>=T)) {
    pos1=10;
    pos2=30;
    pos3=20;

    key=2;
  }
  
  else if((F1>=Th) || (F2>=Th) || (F3>=Th)) {
    pos1=20;
    pos2=30;
    pos3=10;

    key=3;
  }
  
  else if((F1>=F) || (F2>=F) || (F3>=F)) {
    pos1=30;
    pos2=20;
    pos3=10;

    key=4;
  }
  
  else if((F1>=Fi) || (F2>=Fi) || (F3>=Fi)) {
    pos1=40;
    pos2=10;
    pos3=20;

    key=5;
  }
}

//data sending pos
void DS() {
  if(data==1) {
    Serial.println("DS G...");
    radio.stopListening();
    radio.write(&POS, sizeof(POS));
    POS[0]=pos1; 
    POS[1]=pos2;
    POS[2]=pos3;
    Serial.print("sent");
  }

  else{
    Serial.print("wrong data value received... ");
    Serial.print("radio unnavailable... ");
    Serial.print("error in DS... ");
  }
}

void SDwrite() {
  if(myFile) {
    myFile = SD.open("rsrch.txt", FILE_WRITE);

    myFile.print("rsrch.txt(1,2,3): ");    
    myFile.print(POS[0]);
    myFile.print(",");
    myFile.print(POS[1]);
    myFile.print(",");
    myFile.print(POS[2]);

    myFile.print(" PI: ");
    myFile.print(intru);

    myFile.close();
  }
  else {
    Serial.println("SDwrite P...");
  }
}
