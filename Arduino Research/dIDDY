#include <nRF24L01.h>
#include <SPI.h>
#include <RF24.h>
#include <Wire.h>
#include <Time.h>
#include <DS1307RTC.h>
#include <SD.h>

//for SD
File myFile;

#define O 100
#define T 200 
#define Th 300 
#define F 400 
#define Fi 500 

#define SCS 10
#define SDP 4  
#define NCS 7

//for nRF24L01
RF24 radio(8,NCS);
const byte addresses[][6] = {"00001", "00002"};

//Ff123 is the force sensors and are connected to A012
int FS[3];

#define Close 6
#define Open 4
#define sensing 5  
int F1;
int F2;
int F3;

byte intru=0;
byte key=0;

void setup() {
  Serial.begin(9600);

  pinMode(Close, OUTPUT);
  pinMode(Open, OUTPUT);
  pinMode(sensing, OUTPUT);

  pinMode(NCS, OUTPUT);
  pinMode(SDP, OUTPUT);
  pinMode(SCS, OUTPUT);
  digitalWrite(NCS, HIGH);
  digitalWrite(SDP, HIGH);
  digitalWrite(SCS, HIGH);
  //HIGH means off both on CS and PNP MOSFET

  NRFinit();

  SDinit();  
}

void NRFinit() {
  nact();
  if(radio.begin()) {
    Serial.println("Radio G...");
    radio.setPALevel(RF24_PA_MIN);
    radio.setDataRate(RF24_250KBPS);
    radio.openWritingPipe(addresses[1]);
    radio.openReadingPipe(1, addresses[0]);
    //radio.setChannel(90);
  }

  else if(!radio.begin()) {
    Serial.println(Radio P...);
    while(1);
  }
}

void SDinit() {
  sact();
  if(SD.begin(10)) {
    Serial.println("SD G...");

    if(SD.exists("experi.csv")) {
      SD.remove("experi.csv");
      Serial.println("CSV overwritten");
    }

    myFile = SD.open("experi.csv", FILE_WRITE);

    if(myFile) {
      Serial.println("writing ");
      myFile.print("Time(second");
      myFile.print(",");
      myFile.print("Minute");
      myFile.print(",");
      myFile.print("Hour)");
      myFile.print(" Date(Day");
      myFile.print(",");
      myFile.print("Month)");
      myFile.print(",");
      myFile.print("POS: ");
      myFile.print(",");
      myFile.print("1");
      myFile.print(",");
      myFile.print("2");
      myFile.print(",");
      myFile.print("3");
      myFile.print(",");
      myFile.print("Intru");
      myFile.print(",");

      myFile.close();
    }
    else if(!myFile) {
      Serial.println("Writing P...");
      while(1);
    }
  }

  else if(!SD.begin(10)) {
    Serial.println("SD P...");
    while(1);
  }
}

void loop() {
  F1 = analogRead(A0);
  F2 = analogRead(A1);
  F3 = analogRead(A2);

  Serial.println(F1);
  Serial.println(F2);
  Serial.println(F3);

  nact();
  radio.startListening();
  if((F1>10) || (F2>10) || (F2>10) && (radio.available())) {
    TIME();

    recsen();

    v12345();

    if(key>0) {
        opening();
    }
  }

  else if((F1>10) || (F2>10) || (F2>10) && (!radio.available())) {
    v12345();

    if(key>0) {
        opening();
    }
  }
}

void nact() {
  digitalWrite(SDP, HIGH);
  digitalWrite(SCS, HIGH);
  digitalWrite(NCS, LOW) 
}

void sact() {
  digitalWrite(NCS, HIGH);
  digitalWrite(SCS, LOW);
  digitalWrite(SDP, LOW);
}

void TIME () {
  tmElements_t tm;
  if (RTC.read(tm)) {
    Serial.print("Time: ");
    Serial.print(tm.Hour);
    Serial.print(":");
    Serial.print(tm.Minute);
    Serial.print(":");
    Serial.print(tm.Second);
    Serial.print(",Date: ");
    Serial.print(tm.Day);
    Serial.print("/");
    Serial.println(tm.Month);

    myFile = SD.open("experi.csv", FILE_WRITE);

    if(myFile) {
      myFile.print(tm.Second);
      myFile.print(",");
      myFile.print(tm.Minute);
      myFile.print(",");
      myFile.print(tm.Hour);
      myFile.print(",");
      myFile.print(tm.Day);
      myFile.print(",");
      myFile.print(tm.Month);
      myFile.print(",");
      myFile.print(F1);
      myFile.print(",");
      myFile.print(F2);
      myFile.print(",");
      myFile.print(F3);
      myFile.print(",");

      if(intru>0) {
        myFile.print(intru);
        myFile.print(",");
      }

      myFile.close();
    }

    else if(!myFile) {
      Serial.println("Error write RTC");
      while(1);
    }
  }
  
  else {
    if (!RTC.chipPresent()) {
      Serial.println("REALTIME P...");
      while(1);
    }
  }
}

void recsen() {
    nact();

    radio.startListening();
    if(radio.available()) {
        Serial.println("receiving");
        dataf=0;
        radio.read(&dataf, sizeof(dataf));

        while(dataf!=2) {
            Serial.println("wrong authorization");
            if(dataf==2) {
                break;
            }
        }

        if(dataf==2) {
            radio.stopListening();
            Serial.println("sending");
            radio.write(&FS, sizeof(FS));
        }
    }
}

void v12345() {
  //The probability will increase as the number of if statements in this method increases, current probability is 1/5

  if((F1>1000) || (F2>100) || (F3>300)) {
    FS[0] = 13;  //-3 =10
    FS[1] = 40;  //-10 =30
    FS[2] = 34;  //-4 =30

    key=1;
  }
  
  else if((F1>100) || (F2>1000) || (F3>500)) {
    FS[0] = 74;  //-14 =60
    FS[1] = 12;  //+8 =20
    FS[2] = 53;  //-3 =50

    key=2;
  }
  
  else if((F1>300) || (F2>300) || (F3>100)) {
    FS[0] = 64;  //-4 =60
    FS[1] = 80;  //-10 =70
    FS[2] = 46;  //-6 =40

    key=3;
  }
  
  else if((F1>200) || (F2>200) || (F3>1000)) {
    FS[0] = 40;
    FS[1] = 30;
    FS[2] = 25;

    key=4;
  }
  
  else if((F1>400) || (F2>500) || (F3>200)) {
    FS[0] = 90; //-10 =80
    FS[1] = 80; //+10 =90
    FS[2] = 100; //-30 =70

    key=5;
  }
}

//Ln 101: If((key1) && (F1==pos1)). what i want to happen is, if key1 is true then the maps on O1 will be the passkey of the doorknob
void opening() {
  //F123 will equal to a value in keys on void.v12345
  //IF key is equal to either 12345 it opens, otherwise by default close
  switch(key) { 
    case 1:
    if((F1>1000) && (F2>100) && (F3>300) && (dataf==2)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    if(dataf!=2) {
        intru=1;
    }
    }
    break;

    case 2:
    if((F1>100) && (F2>1000) && (F3>500) && (dataf==2)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    if(dataf!=2) {
        intru=2;
    }
    }
    break;

    case 3:
    if((F1>300) && (F2>300) && (F3>100) && (dataf==2)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    if(dataf!=2) {
        intru=3;
    }
    }
    break;

    case 4:
    if((F1>200) && (F2>200) && (F3>1000) && (dataf==2)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    if(dataf!=2) {
        intru=4;
    }
    }
    break;

    case 5:
    if((F1>400) && (F2>500) && (F3>200) && (dataf==2)) {
    digitalWrite(Close, LOW);
    digitalWrite(Open, HIGH);
    if(dataf!=2) {
        intru=5;
    }
    }
    break;

    default:
    digitalWrite(Close, HIGH);
    digitalWrite(Open, LOW);
    if(dataf!=2) {
        intru=def;
    }
    break;
  }
  
}
